continue
exit
continue
âˆ‚
continue
session[]
continue
!session[:user_id]
session[]
user.id
user
continue
exit
exot
y
params[:session][:remember_me] == '1'?
params[:session][:remember_me] == '1'
params[:session][:remember_me]
params[:session]
continue
remember_token
BCrypt::Password.new(remember_token)
BCrypt::Password.new(remember_digest) == remember_token
BCrypt::Password.new(remember_digest)
BCrypt::Password.new(remember_digest).is_password?(remember_token)
BCrypt::Password.new(remember_digest).is_password(remember_token)
BCrypt::Password.new(remember_digest)
remember_digest
remember_token
continue
user.authenticated?(token)
token = cookies[:remember_token]
token cookies[:remember_token]
cookies[:remember_token]
user
user = User.find_by(id: user_id)
User.find_by(id: user_id)
User.find_by(id: user_id
user
exit
user.remember_token
token
user.remember_digest
user.authenticated?token
User.authenticated?(token)
User.authenticated?(cookies[:remember_token])
BCrypt::Password.new(token).is_password?
BCrypt::Password.new(token)
BCrypt::Password.ner(token)
token
token = cookies[:remember_token]
cookies[:remember_token]
BCrypt::Password.new(cookies[:remember_token])
BCrypt::Password.new(cookies[:remember_digest])
BCrypt::Password.new(remember_digest)
user.remember_token
user.authenticated?cookies[:remember_token]
user.authenticated?
cookies[:remember_token]
user
session[:user_id]
cookies.signed[:user_id]
@current_user
continue
params[]
params[:id]
@user.email
@user.name
